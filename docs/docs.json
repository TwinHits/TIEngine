{"classes":[{"name":"TIEngine Interface","description":"This interface represents the managers that comprise the engine.","methods":[{"name":"isValid","returns":"boolean","description":"Test method to validate that interface has been properly initialized.","parameters":[],"display":true},{"name":"registerTexturesDirectory","returns":"boolean","description":"Register a directory relative to your script's working directory to search for textures.","parameters":[{"name":"directory","type":"const std::string&","description":"Directory to append to the script's working directory.","display":true}],"display":true},{"name":"registerFontsDirectory","returns":"boolean","description":"Register a directory relative to your script's working directory to search for fonts.","parameters":[{"name":"directory","type":"const std::string&","description":"Directory to append to the script's working directory.","display":true}],"display":true},{"name":"registerAudioDirectory","returns":"boolean","description":"Register a directory relative to your script's working directory to search for audio.","parameters":[{"name":"directory","type":"const std::string&","description":"Directory to append to the script's working directory.","display":true}],"display":true},{"name":"setWindowTitle","returns":"boolean","description":"Set the title that appears in the window header.","parameters":[{"name":"title","type":"const std::string&","description":"What title should appear on the window header bar.","display":true}],"display":true},{"name":"setWindowSize","returns":"boolean","description":"Change the size of the window.","parameters":[{"name":"width","type":"const int","description":"Width of the window.","display":true},{"name":"height","type":"const int","description":"Height of the window.","display":true}],"display":true},{"name":"registerLevel","returns":"boolean","description":"Registers a TIEntity as a possible level in the world.","parameters":[{"name":"name","type":"const string&","description":"Name of the level.","display":true},{"name":"definition","type":"lua table","description":"Correctly consturcted TIEntity definition","display":true}],"display":true},{"name":"setLevel","returns":"boolean","description":"Sets a TIEntity as the current level of the world.","parameters":[{"name":"name","type":"const string&","description":"Name of the level.","display":true}],"display":true},{"name":"registerTIEntity","returns":"boolean","description":"Registers a spawnable TIEntity.","parameters":[{"name":"name","type":"const string&","description":"Name of the TIEntity.","display":true},{"name":"definition","type":"lua table","description":"Correctly consturcted TIEntity definition","display":true}],"display":true},{"name":"spawn","returns":"TIEntity Interface","description":"Builds the named TIEntity and spawns it into the world.","parameters":[{"name":"name","type":"const string&","description":"Name of the TIEntity.","display":true}],"display":true},{"name":"hasEvent","returns":"boolean","description":"Check if a given SFML input event has been detected in the last frame.","parameters":[],"display":true},{"name":"getMouseClickPosition","returns":"Vector2I Interface","description":"Returns the location of the right mouse click this frame. If there is none, returns (0,0).","parameters":[],"display":true},{"name":"getTIEntityById","returns":"TIEntity Interface","description":"Returns the TIEntity with the given id.","parameters":[],"display":true},{"name":"registerBehavior","returns":"number","description":"Registers a Lua function and returns it's id.","parameters":[],"display":true}],"display":true},{"name":"TIEntity Interface","description":"This interface represents a single TIEntity.","methods":[{"name":"getId","returns":"number","description":"Gets the id of this TIEntity.","parameters":[],"display":true},{"name":"getPosition","returns":"Vector2FInterface","description":"Returns this entity's world position.","parameters":[],"display":true},{"name":"setDestination","returns":"void","description":"Sets a new destination for this TIEntity.","parameters":[],"display":true},{"name":"atDestination","returns":"bool","description":"Returns whether or not this TIEntity is at it's current destination.","parameters":[],"display":true},{"name":"moveUp","returns":"void","description":"Sets the target destination to one maxSpeed in pixels towards the top of the screen.","parameters":[],"display":true},{"name":"moveRight","returns":"void","description":"Sets the target destination to one maxSpeed in pixels towards the right side of the screen.","parameters":[],"display":true},{"name":"moveLeft","returns":"void","description":"Sets the target destination to one maxSpeed in pixels towards the left side of the screen.","parameters":[],"display":true},{"name":"moveDown","returns":"void","description":"Sets the target destination to one maxSpeed in pixels towards the bottom of the screen.","parameters":[],"display":true},{"name":"spawn","returns":"void","description":"Spawns the given TIEntity and attaches it as a child to this TIEntity.","parameters":[],"display":true},{"name":"despawn","returns":"void","description":"Removes this TIEntity from it's parent and garbage collects it.","parameters":[],"display":true},{"name":"addState","returns":"void","description":"Adds a new string to this TIEntity's state list to change which events apply.","parameters":[],"display":true},{"name":"removeState","returns":"void","description":"Removes a string from this TIEntity's state list to change which events apply.","parameters":[],"display":true},{"name":"setCache","returns":"void","description":"Sets the TIEntity's cache to an arbitrary lua table.","parameters":[],"display":true},{"name":"getCache","returns":"table","description":"Gets the current cache table.","parameters":[],"display":true},{"name":"setBehaviorById","returns":"void","description":"Sets which registered behavior function by id to execute every frame.","parameters":[],"display":true},{"name":"setBehaviorByName","returns":"void","description":"Sets which registered behavior function by name to execute every frame.","parameters":[],"display":true},{"name":"setPosition","returns":"void","description":"Instantly sets the position of the tientity.","parameters":[],"display":true},{"name":"setDrawn","returns":"void","description":"Sets the drawn state of the TIEntity.","parameters":[],"display":true},{"name":"getRotation","returns":"void","description":"Returns tientity's rotation according to the position component in degrees","parameters":[],"display":true},{"name":"setRotation","returns":"void","description":"Set's tientity's rotation in degrees","parameters":[],"display":true}],"display":true},{"name":"Vector Interface","description":"This interface represents a pair of numbers","methods":[],"display":true}],"display":true}