Singleton<SceneManager>
	Instance():
		Calls a reference to the manager. Creates, if not yet done.
	void render():
		Calls draw() on all SceneObjects.
	int getFPS():		
		Returns the math'd frames per second based on time of last frame.


Singleton<ConfigManager>:
	Instance():
		Calls a reference to the manager. Creates, if not yet done.
	const std::string& getDebugLogPath():
		Returns path to logs directory. Default: ""
	const std::string& getAssetsPath():
		Returns path to assets directory. Default: ""
	const int& getDebugLogLevel():
		Returns logging level. Default: "3"
	

Singleton<AssetsManager>:
	Instance():
		Calls a reference to the manager. Creates, if not yet done.
	const sf::Texture& getTexture(GlobalId id):
		Returns texture by id.
	const std::string& getAudio(GlobalId id)
		Returns audio by id. Incomplete.


Singleton<LogManager>:
	Instance():
		Calls a reference to the manager. Creates, if not yet done.
	void logError(const std::string& message):
		Logs an error in the debuglog log.
	void logWarn(const std::string& message):
		Logs a warning in the debuglog log.
	void logInfo(const std::string& message):
		Logs a info in the debuglog log.


Singleton<SceneObjectManager>:
	Instance():
		Calls a reference to the manager. Creates, if not yet done.
	const SceneObject& addSceneObject():
		Adds and returns a SceneObject.
	void rmSceneObject& getSceneObject(GlobalId id):
		Removes SceneObject by id.
	const SceneObject& getSceneObject(GlobalId id):
		Returns SceneObject by id.
	const std::map<GlobalId, SceneObject*>& getAllSceneObjects():
		Returns map of all SceneObjects[GlobalId id].
	void updateGameState():
		Calls update on all SceneObjects.


Singleton<PlayerManager>:
	Instance():
		Calls a reference to the manager. Creates, if not yet done.
	const Player& addPlayer():
		Adds and returns a Player.	
	void rmPlayer(GlobalId id):
		Removes a player by id.
	const Player& getPlayer(GlobalId id):
		Returns player by id.
	const std::map<GlobalId, Player*>&  getAllPlayers():
		Returns map of all Player[GlobalId id]


Singleton<InputManager>:
	Instance():
		Calls a reference to the manager. Creates, if not yet done.
	void processInput():
		Polls window managed by WindowManager for events and sends appropriate
		message.
		Calls InputMap object to process events, as well as to process the input
		states on each frame.


Singleton<WindowManager>:
	Instance():
		Calls a reference to the manager. Creates, if not yet done.
	sf::RenderWindow& addWindow(VideoMode mode, const String &title, Uint32 style=Style::Default, const ContextSettings &settings=ContextSettings())):
		Adds and returns sf::RenderWindow. If exists, returns existing.
	sf::RenderWindow& getWindow():
		Gets sf::RenderWindow.
	void rmWindow():
		Removes sf::RenderWindow.

Singleton<MessageManager>:
	Instance():
		Calls a reference to the manager. Creates, if not yet done.
	void sendMessage():
		Sends class Message to all SceneObjects.

Singleton<HashManager>:
	Instance():
		Returns a reference to the manager. Creates, if not yet done.
	GlobalId getNewGlobalId():
		Increments counter and returns new unique id.
	unsigned long getHash(const std::string);
		Returns hashed value of given string.
	void setSeed(GlobalId int):
		Sets seed to some number.

Singleton<TimeManager>:
	Instance():
		Returns a reference to the manager. Creates, if not yet done.
	const sf::Clock& addClock():
		Adds a clock to the map, and returns a reference to it.
	
Singleton<StringManager>:
	Instance():
		Returns a reference to the manager. Creates, if not yet done
	const std::string getString(const std::string&):
		Returns localized version of string for defined displayLanguage.
		Default: EN.
	const std::string getString(const std::string&, Language l):	
		Returns localized version of string for given language.	
	void addString(const std::string&):
		Adds string as registered string for defined userLanguage).
	void addString(const std::string&, Language, const std::string&):
		Adds string2 as a localization in Language to string1. If hash of
		string1 does not exist, adds string1 as displayLangauge localization, and
		string2 as l localizaton.
	void setDisplayLanguage(Language):
		Sets language of strings returned by getString.
