SceneManager:
	Responsible for deciding which objects are to be drawn.
	draw(camera):
		Optimally draws objects.

ConfigManager:
	Responsibile for loading and parsing configuration files into explicitly
		typed data members with get() functions.

AssetsManager:
	returns asset refernce when requested by type.
	validate resource
	Viewing mode?

LogManager:
	Responsible for outputting data into the log files. Can designate different
		logging types and levels.
			3: Errors, Warns, and Info.
			2: Errors, and Warns.
			1: Errors.
	Config value keys should be case insensitive

SceneObjectManager:
	Responisble for storing and deleting objects that are not players.

PlayerManager:
	Responsible for storing and deleting objects that are players.
	Implicitedly creates a window for every player.

EventsManager:
	Responsible for interpreting event loop inputs

WindowManager:
	Responsible for giving singleton like features to the single window
reference.

Messages:
	Each sceneobject broadcasts messages to every other sceneobject. O(nN)
	Each object knows which messages they ignore and which they operate on.
	When an object must do a thing, it puts the thing into it's queue.
	Each update, it looks at each thing in it's queue and checks if its
requirements are filled.
	If so, it removes it from the queue.
	This lets the object do more than one thing at once.
	Individual commands are expected to know their dependencies on other things.
