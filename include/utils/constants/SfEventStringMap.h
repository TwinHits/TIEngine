#include <map>

#include <SFML/Graphics.hpp>

#include "utils/comparators/CaseInsensitiveComparator.h"

namespace TIE {

class SfEventStringMap {
    public:
        static const inline std::map<sf::Keyboard::Key, std::string> KEY_TO_STRING = {
            { sf::Keyboard::A, "A" },
            { sf::Keyboard::B, "B" },
            { sf::Keyboard::C, "C" },
            { sf::Keyboard::D, "D" },
            { sf::Keyboard::E, "E" },
            { sf::Keyboard::F, "F" },
            { sf::Keyboard::G, "G" },
            { sf::Keyboard::H, "H" },
            { sf::Keyboard::I, "I" },
            { sf::Keyboard::J, "J" },
            { sf::Keyboard::K, "K" },
            { sf::Keyboard::L, "L" },
            { sf::Keyboard::M, "M" },
            { sf::Keyboard::N, "N" },
            { sf::Keyboard::O, "O" },
            { sf::Keyboard::P, "P" },
            { sf::Keyboard::Q, "Q" },
            { sf::Keyboard::R, "R" },
            { sf::Keyboard::S, "S" },
            { sf::Keyboard::T, "T" },
            { sf::Keyboard::U, "U" },
            { sf::Keyboard::V, "V" },
            { sf::Keyboard::W, "W" },
            { sf::Keyboard::X, "X" },
            { sf::Keyboard::Y, "Y" },
            { sf::Keyboard::Z, "Z" },
            { sf::Keyboard::Num0, "NUM0" },
            { sf::Keyboard::Num1, "NUM1" },
            { sf::Keyboard::Num2, "NUM2" },
            { sf::Keyboard::Num3, "NUM3" },
            { sf::Keyboard::Num4, "NUM4" },
            { sf::Keyboard::Num5, "NUM5" },
            { sf::Keyboard::Num6, "NUM6" },
            { sf::Keyboard::Num7, "NUM7" },
            { sf::Keyboard::Num8, "NUM8" },
            { sf::Keyboard::Num9, "NUM9" },
            { sf::Keyboard::Escape, "ESCAPE" },
            { sf::Keyboard::LControl, "LCONTROL" },
            { sf::Keyboard::LShift, "LSHIFT" },
            { sf::Keyboard::LAlt, "LALT" },
            { sf::Keyboard::LSystem, "LSYSTEM" },
            { sf::Keyboard::RControl, "RCONTROL" },
            { sf::Keyboard::RShift, "RSHIFT" },
            { sf::Keyboard::RAlt, "RALT" },
            { sf::Keyboard::RSystem, "RSYSTEM" },
            { sf::Keyboard::Menu, "MENU" },
            { sf::Keyboard::LBracket, "LBRACKET" },
            { sf::Keyboard::RBracket, "RBRACKET" },
            { sf::Keyboard::SemiColon, "SEMICOLON" },
            { sf::Keyboard::Comma, "COMMA" },
            { sf::Keyboard::Period, "PERIOD" },
            { sf::Keyboard::Quote, "QUOTE" },
            { sf::Keyboard::Slash, "SLASH" },
            { sf::Keyboard::BackSlash, "BACKSLASH" },
            { sf::Keyboard::Tilde, "TILDE" },
            { sf::Keyboard::Equal, "EQUAL" },
            { sf::Keyboard::Dash, "DASH" },
            { sf::Keyboard::Space, "SPACE" },
            { sf::Keyboard::Return, "RETURN" },
            { sf::Keyboard::BackSpace, "BACKSPACE" },
            { sf::Keyboard::Tab, "TAB" },
            { sf::Keyboard::PageUp, "PAGEUP" },
            { sf::Keyboard::PageDown, "PAGEDOWN" },
            { sf::Keyboard::End, "END" },
            { sf::Keyboard::Home, "HOME" },
            { sf::Keyboard::Insert, "INSERT" },
            { sf::Keyboard::Delete, "DELETE" },
            { sf::Keyboard::Add, "ADD" },
            { sf::Keyboard::Subtract, "SUBTRACT" },
            { sf::Keyboard::Multiply, "MULTIPLY" },
            { sf::Keyboard::Divide, "DIVIDE" },
            { sf::Keyboard::Left, "LEFT" },
            { sf::Keyboard::Right, "RIGHT" },
            { sf::Keyboard::Up, "UP" },
            { sf::Keyboard::Down, "DOWN" },
            { sf::Keyboard::Numpad0, "NUMPAD0" },
            { sf::Keyboard::Numpad1, "NUMPAD1" },
            { sf::Keyboard::Numpad2, "NUMPAD2" },
            { sf::Keyboard::Numpad3, "NUMPAD3" },
            { sf::Keyboard::Numpad4, "NUMPAD4" },
            { sf::Keyboard::Numpad5, "NUMPAD5" },
            { sf::Keyboard::Numpad6, "NUMPAD6" },
            { sf::Keyboard::Numpad7, "NUMPAD7" },
            { sf::Keyboard::Numpad8, "NUMPAD8" },
            { sf::Keyboard::Numpad9, "NUMPAD9" },
            { sf::Keyboard::F1, "F1" },
            { sf::Keyboard::F2, "F2" },
            { sf::Keyboard::F3, "F3" },
            { sf::Keyboard::F4, "F4" },
            { sf::Keyboard::F5, "F5" },
            { sf::Keyboard::F6, "F6" },
            { sf::Keyboard::F7, "F7" },
            { sf::Keyboard::F8, "F8" },
            { sf::Keyboard::F9, "F9" },
            { sf::Keyboard::F10, "F10" },
            { sf::Keyboard::F11, "F11" },
            { sf::Keyboard::F12, "F12" },
            { sf::Keyboard::F13, "F13" },
            { sf::Keyboard::F14, "F14" },
            { sf::Keyboard::F15, "F15" },
            { sf::Keyboard::Pause, "PAUSE" },
        };

        static const inline std::map<std::string, sf::Keyboard::Key, CaseInsensitiveCompare> STRING_TO_KEY = {
            {"A", sf::Keyboard::A},
            {"B", sf::Keyboard::B},
            {"C", sf::Keyboard::C},
            {"D", sf::Keyboard::D},
            {"E", sf::Keyboard::E},
            {"F", sf::Keyboard::F},
            {"G", sf::Keyboard::G},
            {"H", sf::Keyboard::H},
            {"I", sf::Keyboard::I},
            {"J", sf::Keyboard::J},
            {"K", sf::Keyboard::K},
            {"L", sf::Keyboard::L},
            {"M", sf::Keyboard::M},
            {"N", sf::Keyboard::N},
            {"O", sf::Keyboard::O},
            {"P", sf::Keyboard::P},
            {"Q", sf::Keyboard::Q},
            {"R", sf::Keyboard::R},
            {"S", sf::Keyboard::S},
            {"T", sf::Keyboard::T},
            {"U", sf::Keyboard::U},
            {"V", sf::Keyboard::V},
            {"W", sf::Keyboard::W},
            {"X", sf::Keyboard::X},
            {"Y", sf::Keyboard::Y},
            {"Z", sf::Keyboard::Z},
            {"NUM0", sf::Keyboard::Num0},
            {"NUM1", sf::Keyboard::Num1},
            {"NUM2", sf::Keyboard::Num2},
            {"NUM3", sf::Keyboard::Num3},
            {"NUM4", sf::Keyboard::Num4},
            {"NUM5", sf::Keyboard::Num5},
            {"NUM6", sf::Keyboard::Num6},
            {"NUM7", sf::Keyboard::Num7},
            {"NUM8", sf::Keyboard::Num8},
            {"NUM9", sf::Keyboard::Num9},
            {"ESCAPE", sf::Keyboard::Escape},
            {"LCONTROL", sf::Keyboard::LControl},
            {"LSHIFT", sf::Keyboard::LShift},
            {"LALT", sf::Keyboard::LAlt},
            {"LSYSTEM", sf::Keyboard::LSystem},
            {"RCONTROL", sf::Keyboard::RControl},
            {"RSHIFT", sf::Keyboard::RShift},
            {"RALT", sf::Keyboard::RAlt},
            {"RSYSTEM", sf::Keyboard::RSystem},
            {"MENU", sf::Keyboard::Menu},
            {"LBRACKET", sf::Keyboard::LBracket},
            {"RBRACKET", sf::Keyboard::RBracket},
            {"SEMICOLON", sf::Keyboard::SemiColon},
            {"COMMA", sf::Keyboard::Comma},
            {"PERIOD", sf::Keyboard::Period},
            {"QUOTE", sf::Keyboard::Quote},
            {"SLASH", sf::Keyboard::Slash},
            {"BACKSLASH", sf::Keyboard::BackSlash},
            {"TILDE", sf::Keyboard::Tilde},
            {"EQUAL", sf::Keyboard::Equal},
            {"DASH", sf::Keyboard::Dash},
            {"SPACE", sf::Keyboard::Space},
            {"RETURN", sf::Keyboard::Return},
            {"BACKSPACE", sf::Keyboard::BackSpace},
            {"TAB", sf::Keyboard::Tab},
            {"PAGEUP", sf::Keyboard::PageUp},
            {"PAGEDOWN", sf::Keyboard::PageDown},
            {"END", sf::Keyboard::End},
            {"HOME", sf::Keyboard::Home},
            {"INSERT", sf::Keyboard::Insert},
            {"DELETE", sf::Keyboard::Delete},
            {"ADD", sf::Keyboard::Add},
            {"SUBTRACT", sf::Keyboard::Subtract},
            {"MULTIPLY", sf::Keyboard::Multiply},
            {"DIVIDE", sf::Keyboard::Divide},
            {"LEFT", sf::Keyboard::Left},
            {"RIGHT", sf::Keyboard::Right},
            {"UP", sf::Keyboard::Up},
            {"DOWN", sf::Keyboard::Down},
            {"NUMPAD0", sf::Keyboard::Numpad0},
            {"NUMPAD1", sf::Keyboard::Numpad1},
            {"NUMPAD2", sf::Keyboard::Numpad2},
            {"NUMPAD3", sf::Keyboard::Numpad3},
            {"NUMPAD4", sf::Keyboard::Numpad4},
            {"NUMPAD5", sf::Keyboard::Numpad5},
            {"NUMPAD6", sf::Keyboard::Numpad6},
            {"NUMPAD7", sf::Keyboard::Numpad7},
            {"NUMPAD8", sf::Keyboard::Numpad8},
            {"NUMPAD9", sf::Keyboard::Numpad9},
            {"F1", sf::Keyboard::F1},
            {"F2", sf::Keyboard::F2},
            {"F3", sf::Keyboard::F3},
            {"F4", sf::Keyboard::F4},
            {"F5", sf::Keyboard::F5},
            {"F6", sf::Keyboard::F6},
            {"F7", sf::Keyboard::F7},
            {"F8", sf::Keyboard::F8},
            {"F9", sf::Keyboard::F9},
            {"F10", sf::Keyboard::F10},
            {"F11", sf::Keyboard::F11},
            {"F12", sf::Keyboard::F12},
            {"F13", sf::Keyboard::F13},
            {"F14", sf::Keyboard::F14},
            {"F15", sf::Keyboard::F15},
            {"PAUSE", sf::Keyboard::Pause},
        };

        static const inline std::map<sf::Event::EventType, std::string> EVENT_TYPE_TO_STRING = {
            {sf::Event::Closed, "CLOSED"},
            {sf::Event::Resized, "RESIZED"},
            {sf::Event::LostFocus, "LOSTFOCUS"},
            {sf::Event::GainedFocus, "GAINEDFOCUS"},
            {sf::Event::TextEntered, "TEXTENTERED"},
            {sf::Event::KeyPressed, "KEYPRESSED"},
            {sf::Event::KeyReleased, "KEYRELEASED"},
            {sf::Event::MouseWheelMoved, "MOUSEWHEELMOVED"},
            {sf::Event::MouseWheelScrolled, "MOUSEWHEELSCROLLED"},
            {sf::Event::MouseButtonPressed, "MOUSEBUTTONPRESSED"},
            {sf::Event::MouseButtonReleased, "MOUSEBUTTONRELEASED"},
            {sf::Event::MouseMoved, "MOUSEMOVED"},
            {sf::Event::MouseEntered, "MOUSEENTERED"},
            {sf::Event::MouseLeft, "MOUSELEFT"},
            {sf::Event::JoystickConnected, "JOYSTICKCONNECTED"},
            {sf::Event::JoystickDisconnected, "JOYSTICKDISCONNECTED"},
            {sf::Event::JoystickButtonPressed, "JOYSTICKBUTTONPRESSED"},
            {sf::Event::JoystickButtonReleased, "JOYSTICKBUTTONRELEASED"},
            {sf::Event::JoystickMoved, "JOYSTICKMOVED"},
            {sf::Event::TouchBegan, "TOUCHBEGAN"},
            {sf::Event::TouchMoved, "TOUCHMOVED"},
            {sf::Event::TouchEnded, "TOUCHENDED"},
            {sf::Event::SensorChanged, "SENSORCHANGED"},
            {sf::Event::Count, "COUNT"},
        };

        static const inline std::map<std::string, sf::Event::EventType, CaseInsensitiveCompare> STRING_TO_EVENT_TYPE = {
            {"CLOSED", sf::Event::Closed},
            {"RESIZED", sf::Event::Resized},
            {"LOSTFOCUS", sf::Event::LostFocus},
            {"GAINEDFOCUS", sf::Event::GainedFocus},
            {"TEXTENTERED", sf::Event::TextEntered},
            {"KEYPRESSED", sf::Event::KeyPressed},
            {"KEYRELEASED", sf::Event::KeyReleased},
            {"MOUSEWHEELMOVED", sf::Event::MouseWheelMoved},
            {"MOUSEWHEELSCROLLED", sf::Event::MouseWheelScrolled},
            {"MOUSEBUTTONPRESSED", sf::Event::MouseButtonPressed},
            {"MOUSEBUTTONRELEASED", sf::Event::MouseButtonReleased},
            {"MOUSEMOVED", sf::Event::MouseMoved},
            {"MOUSEENTERED", sf::Event::MouseEntered},
            {"MOUSELEFT", sf::Event::MouseLeft},
            {"JOYSTICKCONNECTED", sf::Event::JoystickConnected},
            {"JOYSTICKDISCONNECTED", sf::Event::JoystickDisconnected},
            {"JOYSTICKBUTTONPRESSED", sf::Event::JoystickButtonPressed},
            {"JOYSTICKBUTTONRELEASED", sf::Event::JoystickButtonReleased},
            {"JOYSTICKMOVED", sf::Event::JoystickMoved},
            {"TOUCHBEGAN", sf::Event::TouchBegan},
            {"TOUCHMOVED", sf::Event::TouchMoved},
            {"TOUCHENDED", sf::Event::TouchEnded},
            {"SENSORCHANGED", sf::Event::SensorChanged},
            {"COUNT", sf::Event::Count},
        };

};

}